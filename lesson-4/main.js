var fullName = "NGUY·ªÑN H·∫† TRANG-15";
console.log(fullName);

// B√ÄI 4: To√°n T·ª≠ Trong JS: Operators in JS!

//üìê To√°n t·ª≠ s·ªë h·ªçc: Arithmetic Operators
var a = 10;
var b = 5;
console.log(a + b); // 15
console.log(a - b); // 5
console.log(a * b); // 50
console.log(a / b); // 2
console.log(a % b); // 0 // Chia l·∫•y d∆∞!
console.log(a ** b); // 100000 // L≈©y th·ª´a

//üö© To√°n t·ª≠ g√°n: Assignment Operators
var c = 20;
c += 5; // c = c + 5; c = 25
c -= 5; // c = c - 5; c = 20
c *= 2; // c = c * 2; c = 40
c /= 4; // c = c / 4; c = 10
c %= 3; // c = c % 3; c = 1

//üòç To√°n t·ª≠ so s√°nh: Comparison Operators
// K·∫øt qu·∫£ c·ªßa ph√©p so s√°nh ch·ªâ tr·∫£ v·ªÅ true or false!

// ==: B·∫±ng (kh√¥ng ph√¢n bi·ªát Ki·ªÉu d·ªØ li·ªáu)
// ===: B·∫±ng (ph√¢n bi·ªát Ki·ªÉu d·ªØ li·ªáu)
// !=: Kh√°c (kh√¥ng ph√¢n bi·ªát Ki·ªÉu d·ªØ li·ªáu)
// !==: Kh√°c (ph√¢n bi·ªát Ki·ªÉu d·ªØ li·ªáu)
// >: L·ªõn h∆°n
// <: Nh·ªè h∆°n
// >=: L·ªõn h∆°n ho·∫∑c b·∫±ng
// <=: Nh·ªè h∆°n ho·∫∑c b·∫±ng

var d = 10;
var e = "10";

console.log(d == e); // true
console.log(d === e); // false
console.log(d != e); // false
console.log(d !== e); // true
console.log(d > 5); // true
console.log(d < 15); // true
console.log(d >= 10); // true
console.log(d <= 10); // true

//‚≠ê To√°n t·ª≠ logic: Logical Operators
var f = true;
var g = false;

console.log(f && g); // false
// const result = a && b && c
// N·∫øu kh√¥ng ph·∫£i l√† bi·ªÉu th·ª©c cu·ªëi M√† gi√° tr·ªã l√†
// 1 trong 6 tr∆∞·ªùng h·ª£p convert => false => D·ª´ng v√†
// g√°n gi√° tr·ªã ƒë√≥ cho result
// N·∫øu ƒëi ƒë∆∞·ª£c ƒë·∫øn bi·ªÉu th·ª©c cu·ªëi th√¨
// l·∫•y gi√° tr·ªã bi·ªÉu th·ª©c cu·ªëi g√°n cho result.
console.log(f || g); // true // Ng∆∞·ª£c l·∫°i v·ªõi &&
// const result = a || b || c
// C·ª© bi·ªÉu th·ª©c n√†o n·∫±m ngo√†i 1 / 6 tr∆∞·ªùng h·ª£p convert => false
// Th√¨ d·ª´ng v√† g√°n gi√° tr·ªã bi·ªÉu th·ª©c ƒë√≥ cho result.
console.log(!f); // false
console.log(!g); // true

// To√°n t·ª≠ tƒÉng gi·∫£m: Increment and Decrement Operators
var h = 5;
// Ti·ªÅn t·ªë:
// Tham chi·∫øu bi·∫øn g·ªëc
// G√°n gi√° tr·ªã t√≠nh to√°n cho bi·∫øn g·ªëc
// Tr·∫£ v·ªÅ gi√° tr·ªã t√≠nh to√°n cho logic kh√°c

++h; // h = h + 1; h = 6
--h; // h = h - 1; h = 5
var i = ++h + h;
//=> i = 6 + 6;

// H·∫≠u t·ªë:
// Tham chi·∫øu bi·∫øn g·ªëc
// G√°n gi√° tr·ªã sau t√≠nh to√°n cho bi·∫øn g·ªëc
// Tr·∫£ v·ªÅ gi√° tr·ªã copy cho logic kh√°c

h++; // h = h + 1; h = 6
h--; // h = h - 1; h = 5
var k = h-- + h;
//=> k = 5 + 4;

// To√°n t·ª≠ ƒëi·ªÅu ki·ªán Conditional/Ternary Operator
// C√≤n g·ªçi l√† to√°n t·ª≠ Ba ng√¥i:
// var age = 18;
// var canVote = age >= 18 ? "Yes" : "No";
// console.log(canVote); // Yes

// To√°n t·ª≠ ki·ªÉu: Type Operators
console.log(typeof 123); // "number"
console.log(typeof "abc"); // "string"
console.log(typeof true); // "boolean"
console.log([1, 2, 3] instanceof Array); // true
console.log({ a: 1 } instanceof Object); // true

// Hi·ªÉu r√µ c√°c to√°n t·ª≠ TR√äN s·∫Ω gi√∫p b·∫°n vi·∫øt m√£ JavaScript m·ªôt c√°ch hi·ªáu qu·∫£ v√† ch√≠nh x√°c h∆°n. result === success!
