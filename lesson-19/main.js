/*





*/
// üü¢üü¢  DOM events in JavaScript ‚≠ê‚≠ê

// DOM events l√† g√¨?
/*
DOM events (Document Object Model events) l√† c√°c s·ª± ki·ªán x·∫£y ra trong t√†i li·ªáu web, v√† ch√∫ng cho ph√©p JavaScript t∆∞∆°ng t√°c v·ªõi HTML. DOM events c√≥ th·ªÉ ƒë∆∞·ª£c k√≠ch ho·∫°t b·ªüi ng∆∞·ªùi d√πng ho·∫∑c b·ªüi tr√¨nh duy·ªát, v√† ch√∫ng cung c·∫•p m·ªôt c√°ch ƒë·ªÉ l√†m cho c√°c trang web tr·ªü n√™n ƒë·ªông v√† t∆∞∆°ng t√°c h∆°n.

D∆∞·ªõi ƒë√¢y l√† m·ªôt s·ªë DOM events ph·ªï bi·∫øn:

1. **Mouse Events**:
    - `click`: X·∫£y ra khi ng∆∞·ªùi d√πng nh·∫•n v√† th·∫£ n√∫t chu·ªôt.
    - `dblclick`: X·∫£y ra khi ng∆∞·ªùi d√πng nh·∫•p ƒë√∫p v√†o m·ªôt ph·∫ßn t·ª≠.
    - `mousedown`: X·∫£y ra khi ng∆∞·ªùi d√πng nh·∫•n n√∫t chu·ªôt.
    - `mouseup`: X·∫£y ra khi ng∆∞·ªùi d√πng th·∫£ n√∫t chu·ªôt.
    - `mousemove`: X·∫£y ra khi ng∆∞·ªùi d√πng di chuy·ªÉn chu·ªôt qua m·ªôt ph·∫ßn t·ª≠.
    - `mouseover`: X·∫£y ra khi con tr·ªè chu·ªôt di chuy·ªÉn v√†o m·ªôt ph·∫ßn t·ª≠.

2. **Keyboard Events**:
    - `keydown`: X·∫£y ra khi ng∆∞·ªùi d√πng nh·∫•n m·ªôt ph√≠m.
    - `keyup`: X·∫£y ra khi ng∆∞·ªùi d√πng th·∫£ m·ªôt ph√≠m.
    - `keypress`: X·∫£y ra khi ng∆∞·ªùi d√πng nh·∫•n m·ªôt ph√≠m (kh√¥ng c√≤n ƒë∆∞·ª£c khuy·∫øn ngh·ªã s·ª≠ d·ª•ng, n√™n d√πng `keydown` ho·∫∑c `keyup` thay th·∫ø).

3. **Form Events**:
    - `submit`: X·∫£y ra khi ng∆∞·ªùi d√πng g·ª≠i m·ªôt form.
    - `reset`: X·∫£y ra khi ng∆∞·ªùi d√πng ƒë·∫∑t l·∫°i m·ªôt form.
    - `focus`: X·∫£y ra khi m·ªôt ph·∫ßn t·ª≠ nh·∫≠n ƒë∆∞·ª£c focus.
    - `blur`: X·∫£y ra khi m·ªôt ph·∫ßn t·ª≠ m·∫•t focus.
    - `change`: X·∫£y ra khi gi√° tr·ªã c·ªßa m·ªôt ph·∫ßn t·ª≠ form thay ƒë·ªïi.

4. **Window Events**:
    - `load`: X·∫£y ra khi to√†n b·ªô trang v√† t·∫•t c·∫£ c√°c t√†i nguy√™n c·ªßa n√≥ (nh∆∞ h√¨nh ·∫£nh, script) ƒë√£ t·∫£i xong.
    - `unload`: X·∫£y ra khi ng∆∞·ªùi d√πng r·ªùi kh·ªèi trang.
    - `resize`: X·∫£y ra khi k√≠ch th∆∞·ªõc c·ª≠a s·ªï tr√¨nh duy·ªát thay ƒë·ªïi.
    - `scroll`: X·∫£y ra khi ng∆∞·ªùi d√πng cu·ªôn trang.

ƒê·ªÉ x·ª≠ l√Ω c√°c DOM events, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c tr√¨nh x·ª≠ l√Ω s·ª± ki·ªán (event handlers). V√≠ d·ª•:

```javascript
document.getElementById("myButton").addEventListener("click", function() {
    alert("Button clicked!");
});
```

Trong v√≠ d·ª• tr√™n, khi ng∆∞·ªùi d√πng nh·∫•p v√†o n√∫t v·ªõi id `myButton`, m·ªôt c·∫£nh b√°o s·∫Ω hi·ªán l√™n v·ªõi th√¥ng b√°o "Button clicked!".
*/
//‚≠ê Attr Event : Vi·∫øt Event tr·ª±c ti·∫øp v√†o th·∫ª m·ªü c·ªßa th·∫ª HTML
// V√≠ du: <h1 "t√™n s·ª± ki·ªán (B·∫Øt ƒë·∫ßu b·∫±ng on...)" = "function (Th·ª±c hi·ªán h√†nh ƒë·ªông n√†o ƒë√≥)">Attr Event</h1>

//‚≠ê Add event ElementNode:
// ElementNode g·ªçi ƒë·∫øn ph∆∞∆°ng th·ª©c addEventListener (
// ƒê·ªëi s·ªë th·ª© nh·∫•t: T√™n s·ª± ki·ªán.
// ƒê·ªëi s·ªë th·ª© hai: function
//)

// elementNode.onclick = function () {};
// Kh√¥ng linh ho·∫°t

// elementNode.addEventListener("click", (event) => {
//   event.target;
//   console.log(event.target);
// });
